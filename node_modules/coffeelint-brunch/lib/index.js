// Generated by CoffeeScript 1.7.1
var CoffeeLinter, formatError, linter, util;

linter = require('coffeelint');

util = require('util');

formatError = function(error) {
  var evidence, msg;
  evidence = (error.rule ? "\n\n" + error.rule + "\n" : "\n");
  return msg = "" + error.level + ": " + error.rule + " at line " + error.lineNumber + ". " + (error.context || '');
};

module.exports = CoffeeLinter = (function() {
  CoffeeLinter.prototype.brunchPlugin = true;

  CoffeeLinter.prototype.type = 'javascript';

  CoffeeLinter.prototype.extension = 'coffee';

  function CoffeeLinter(config) {
    var cfg, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8;
    this.config = config;
    cfg = (_ref = (_ref1 = (_ref2 = this.config) != null ? (_ref3 = _ref2.plugins) != null ? _ref3.coffeelint : void 0 : void 0) != null ? _ref1 : (_ref4 = this.config) != null ? _ref4.coffeelint : void 0) != null ? _ref : {};
    if ((_ref5 = this.config) != null ? _ref5.coffeelint : void 0) {
      console.warn("Warning: config.coffeelint is deprecated, move it to config.plugins.coffeelint");
    }
    this.options = cfg.options;
    this.pattern = (_ref6 = cfg.pattern) != null ? _ref6 : RegExp("(" + (((_ref7 = this.config.paths) != null ? (_ref8 = _ref7.watched) != null ? _ref8.join("|") : void 0 : void 0) || "app") + ").*\\.coffee$");
  }

  CoffeeLinter.prototype.lint = function(data, path, callback) {
    var err, error;
    error = (function() {
      try {
        return (linter.lint(data, this.options)).filter(function(error) {
          return error != null;
        }).map(formatError).join('\n');
      } catch (_error) {
        err = _error;
        return err;
      }
    }).call(this);
    if (error) {
      return callback(error);
    } else {
      return callback();
    }
  };

  return CoffeeLinter;

})();
